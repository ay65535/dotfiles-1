# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color-italic

# Window dimensions in character columns and lines
# (changes require restart)
dimensions:
  columns: 160
  lines: 48

# Adds this many blank pixels of padding around the window
# Units are physical pixels; this is not DPI aware.
# (change requires restart)
padding:
  x: 0
  y: 0

# Display tabs using this many cells (changes require restart)
tabspaces: 4

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    family: 'Meslo LG M for Powerline'
    # Style can be specified to pick a specific face.
    # style: Regular

  # The bold font face
  bold:
    family: 'Meslo LG M for Powerline'
    # Style can be specified to pick a specific face.
    style: Regular

  # The italic font face
  italic:
    family: 'Meslo LG M for Powerline'
    # Style can be specified to pick a specific face.
    # style: Italic

  # Point size of the font
  size: 22.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0.0
    y: 0.0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0.0
    y: 0.0

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: false

# Should display the render timer
render_timer: false

# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
custom_cursor_colors: false

# Colors (Tomorrow Night Bright)
colors:
  # Default colors
  primary:
    background: '0x282c34'
    foreground: '0xabb2bf'

  # Colors the cursor will use if `custom_cursor_colors` is true
  cursor:
    text: '0x000000'
    cursor: '0xabb2bf'

  # Normal colors
  normal:
    black: '0x282c34'
    red: '0xe06c75'
    green: '0x98c379'
    yellow: '0xe5c07b'
    blue: '0x61afef'
    magenta: '0xc678dd'
    cyan: '0x56b6c2'
    white: '0xabb2bf'

  # Bright colors
  bright:
    black: '0x3e4452'
    red: '0xbe5046'
    green: '0x98c379'
    yellow: '0xd19a66'
    blue: '0x61afef'
    magenta: '0xc678dd'
    cyan: '0x56b6c2'
    white: '0x5c6370'


# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Possible values for `animation`
# `Ease`
# `EaseOut`
# `EaseOutSine`
# `EaseOutQuad`
# `EaseOutCubic`
# `EaseOutQuart`
# `EaseOutQuint`
# `EaseOutExpo`
# `EaseOutCirc`
# `Linear`
#
# To completely disable the visual bell, set its duration to 0.
#
visual_bell:
  animation: EaseOutExpo
  duration: 0

# Background opacity
background_opacity: 0.96

mouse:
  double_click:
    threshold: 300
  triple_click:
    threshold: 300

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"

hide_cursor_when_typing: false

# Style of the cursor
#
# Values for 'cursor_style':
# - Block
# - Underline
# - Beam
cursor_style: Block

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
#
# shell:
#   program: /bin/bash
#   args:
#     - --login

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
key_bindings:
  - action: Paste
    key: V
    mods: Command
  - action: Copy
    key: C
    mods: Command
  - action: Quit
    key: Q
    mods: Command
  - action: Quit
    key: W
    mods: Command
  - chars: OH
    key: Home
    mode: AppCursor
  - chars: [H
    key: Home
    mode: ~AppCursor
  - chars: OF
    key: End
    mode: AppCursor
  - chars: [F
    key: End
    mode: ~AppCursor
  - action: ResetFontSize
    key: Key0
    mods: Command
  - action: IncreaseFontSize
    key: Equals
    mods: Command
  - action: DecreaseFontSize
    key: Minus
    mods: Command
  - chars: [5;2~
    key: PageUp
    mods: Shift
  - chars: [5;5~
    key: PageUp
    mods: Control
  - chars: [5~
    key: PageUp
  - chars: [6;2~
    key: PageDown
    mods: Shift
  - chars: [6;5~
    key: PageDown
    mods: Control
  - chars: [6~
    key: PageDown
  - chars: [Z
    key: Tab
    mods: Shift
  - chars: 
    key: Back
  - chars: 
    key: Back
    mods: Alt
  - chars: [2~
    key: Insert
  - chars: [3~
    key: Delete
  - chars: [1;2D
    key: Left
    mods: Shift
  - chars: [1;5D
    key: Left
    mods: Control
  - chars: [1;3D
    key: Left
    mods: Alt
  - chars: [D
    key: Left
    mode: ~AppCursor
  - chars: OD
    key: Left
    mode: AppCursor
  - chars: [1;2C
    key: Right
    mods: Shift
  - chars: [1;5C
    key: Right
    mods: Control
  - chars: [1;3C
    key: Right
    mods: Alt
  - chars: [C
    key: Right
    mode: ~AppCursor
  - chars: OC
    key: Right
    mode: AppCursor
  - chars: [1;2A
    key: Up
    mods: Shift
  - chars: [1;5A
    key: Up
    mods: Control
  - chars: [1;3A
    key: Up
    mods: Alt
  - chars: [A
    key: Up
    mode: ~AppCursor
  - chars: OA
    key: Up
    mode: AppCursor
  - chars: [1;2B
    key: Down
    mods: Shift
  - chars: [1;5B
    key: Down
    mods: Control
  - chars: [1;3B
    key: Down
    mods: Alt
  - chars: [B
    key: Down
    mode: ~AppCursor
  - chars: OB
    key: Down
    mode: AppCursor
  - chars: OP
    key: F1
  - chars: OQ
    key: F2
  - chars: OR
    key: F3
  - chars: OS
    key: F4
  - chars: [15~
    key: F5
  - chars: [17~
    key: F6
  - chars: [18~
    key: F7
  - chars: [19~
    key: F8
  - chars: [20~
    key: F9
  - chars: [21~
    key: F10
  - chars: [23~
    key: F11
  - chars: [24~
    key: F12
  - chars: [1;2P
    key: F1
    mods: Shift
  - chars: [1;2Q
    key: F2
    mods: Shift
  - chars: [1;2R
    key: F3
    mods: Shift
  - chars: [1;2S
    key: F4
    mods: Shift
  - chars: [15;2~
    key: F5
    mods: Shift
  - chars: [17;2~
    key: F6
    mods: Shift
  - chars: [18;2~
    key: F7
    mods: Shift
  - chars: [19;2~
    key: F8
    mods: Shift
  - chars: [20;2~
    key: F9
    mods: Shift
  - chars: [21;2~
    key: F10
    mods: Shift
  - chars: [23;2~
    key: F11
    mods: Shift
  - chars: [24;2~
    key: F12
    mods: Shift
  - chars: [1;5P
    key: F1
    mods: Control
  - chars: [1;5Q
    key: F2
    mods: Control
  - chars: [1;5R
    key: F3
    mods: Control
  - chars: [1;5S
    key: F4
    mods: Control
  - chars: [15;5~
    key: F5
    mods: Control
  - chars: [17;5~
    key: F6
    mods: Control
  - chars: [18;5~
    key: F7
    mods: Control
  - chars: [19;5~
    key: F8
    mods: Control
  - chars: [20;5~
    key: F9
    mods: Control
  - chars: [21;5~
    key: F10
    mods: Control
  - chars: [23;5~
    key: F11
    mods: Control
  - chars: [24;5~
    key: F12
    mods: Control
  - chars: [1;6P
    key: F1
    mods: Alt
  - chars: [1;6Q
    key: F2
    mods: Alt
  - chars: [1;6R
    key: F3
    mods: Alt
  - chars: [1;6S
    key: F4
    mods: Alt
  - chars: [15;6~
    key: F5
    mods: Alt
  - chars: [17;6~
    key: F6
    mods: Alt
  - chars: [18;6~
    key: F7
    mods: Alt
  - chars: [19;6~
    key: F8
    mods: Alt
  - chars: [20;6~
    key: F9
    mods: Alt
  - chars: [21;6~
    key: F10
    mods: Alt
  - chars: [23;6~
    key: F11
    mods: Alt
  - chars: [24;6~
    key: F12
    mods: Alt
  - chars: [1;3P
    key: F1
    mods: Command
  - chars: [1;3Q
    key: F2
    mods: Command
  - chars: [1;3R
    key: F3
    mods: Command
  - chars: [1;3S
    key: F4
    mods: Command
  - chars: [15;3~
    key: F5
    mods: Command
  - chars: [17;3~
    key: F6
    mods: Command
  - chars: [18;3~
    key: F7
    mods: Command
  - chars: [19;3~
    key: F8
    mods: Command
  - chars: [20;3~
    key: F9
    mods: Command
  - chars: [21;3~
    key: F10
    mods: Command
  - chars: [23;3~
    key: F11
    mods: Command
  - chars: [24;3~
    key: F12
    mods: Command
  - chars: 
    key: Space
    mods: Control
