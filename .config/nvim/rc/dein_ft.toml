# ============ UNIX/Linux Shell Support ============
[[plugins]]
repo = 'zchee/deoplete-zsh'
depends = 'deoplete.nvim'
on_ft = 'zsh'

# ============ C/C++/Objective-C Support ============
# [[plugins]]
# repo = 'tweekmonster/deoplete-clang2'
# on_ft = ['c', 'cpp', 'objc', 'objcpp']
# hook_add = '''
# " let g:deoplete#sources#clang#executable = '/usr/bin/clang'
# let g:deoplete#sources#clang#std = {
#     \   'c': 'c14',
#     \   'cpp': 'c++14',
#     \   'objc': 'c14',
#     \   'objcpp': 'c++14',
#     \ }
# '''
[[plugins]]
repo = 'zchee/deoplete-clang'
depends = 'deoplete.nvim'
on_ft = ['c', 'cpp', 'objc', 'objcpp']
hook_add = '''
let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-4.0/lib/libclang.so'
let g:deoplete#sources#clang#clang_header = '/usr/lib/llvm-4.0/include/clang'
'''
[[plugins]]
repo = 'libclang-vim/libclang-vim'
on_ft = ['c', 'cpp', 'objc', 'objcpp']
[[plugins]]
repo = 'libclang-vim/vim-textobj-clang'
depends = ['vim-textobj-user', 'libclang-vim']
on_ft = ['c', 'cpp', 'objc', 'objcpp']

# ============ Rust Support ============
[[plugins]]
repo = 'sebastianmarkow/deoplete-rust'
depends = 'deoplete.nvim'
on_ft = ['rs']

# ============ Golang Support ============
[[plugins]]
repo = 'vim-jp/vim-go-extra'
on_ft = 'go'
hook_post_source = '''
augroup go_hooks
  autocmd!
  autocmd FileType go nnoremap <silent><buffer> <Leader>= :<C-u>Fmt<CR>
augroup END
'''
[[plugins]]
repo = 'zchee/deoplete-go'
depends = 'deoplete.nvim'
on_ft = 'go'
build = 'make'
hook_add = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
let g:deoplete#sources#go#package_dot = 1
let g:deoplete#sources#go#pointer = 1
let g:deoplete#sources#go#cgo = 1
let g:deoplete#sources#go#cgo#libclang_path = '/usr/lib/llvm-4.0/lib/libclang.so'
let g:deoplete#sources#go#cgo#auto_goos = 1
'''

# ============ Haskell Support ============
[[plugins]]
repo = 'eagletmt/ghcmod-vim'
depends = 'deoplete.nvim'
on_ft = 'haskell'
[[plugins]]
repo = 'eagletmt/neco-ghc'
depends = ['deoplete.nvim', 'ghcmod-vim']
on_ft = 'haskell'
hook_add = '''
let g:necoghc_enable_detailed_browse = 1
let g:haskellmode_completion_ghc = 0
'''
[[plugins]]
repo = 'gilligan/vim-textobj-haskell'
depends = 'vim-textobj-user'
on_ft = 'haskell'

# ============ Java Support ============
[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
depends = 'deoplete.nvim'
on_ft = 'java'
hook_add = '''
" let g:JavaComplete_GradleExecutable = '/usr/bin/gradle'
'''
hook_post_source = '''
autocmd FileType java nmap <buffer><silent> <Leader>G <Plug>(JavaComplete-Generate-Accessors)
    \ | nmap <buffer><silent> <Leader>gn <Plug>(JavaComplete-Generate-NewClass)
    \ | nmap <buffer><silent> <Leader>go <Plug>(JavaComplete-Generate-AbstractMethods)
    \ | nmap <buffer><silent> <Leader>gc <Plug>(JavaComplete-Generate-Constructor)
    \ | nmap <buffer><silent> <Leader>gs <Plug>(JavaComplete-Generate-AccessorSetter)
    \ | nmap <buffer><silent> <Leader>gg <Plug>(JavaComplete-Generate-AccessorGetter)
    \ | nmap <buffer><silent> <Leader>ga <Plug>(JavaComplete-Generate-AccessorSetterGetter)
    \ | nmap <buffer><silent> <Leader>ge <Plug>(JavaComplete-Generate-EqualsAndHashCode)
'''

# ============ PHP Support ============
[[plugins]]
repo = 'akiyan/vim-textobj-php'
depends = 'vim-textobj-user'
on_ft = 'php'

# ============ Ruby Support ============
[[plugins]]
repo = 'shougo/deoplete-rct'
depends = 'deoplete.nvim'
on_ft = 'ruby'
[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
depends = 'vim-textobj-user'
on_ft = 'ruby'
[[plugins]]
repo = 'tpope/vim-bundler'
on_cmd = ['Bundle', 'Bopen', 'Bsplit', 'Btabedit']
[[plugins]]
repo = 'tpope/vim-rails'
on_cmd = 'Rails'

# ============ Crystal Support ============
[[plugins]]
repo = 'rhysd/vim-crystal'
depends = 'deoplete.nvim'
on_ft = 'crystal'
hook_add = '''
let g:crystal_define_mappings = 0

augroup crystal_hooks
  autocmd!
  autocmd FileType crystal nnoremap <silent><buffer> <Leader>= :<C-u>CrystalFormat<CR>
augroup END
'''

# ============ Python Support ============
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python', 'python3']
hook_add = '''
let g:jedi#auto_vim_configuration = 0
let g:jedi#smart_auto_mappings = 0
let g:jedi#completions_enabled = 0
let g:jedi#show_call_signatures = 0
'''
[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim', 'jedi-vim']
on_ft = ['python', 'python3']
[[plugins]]
repo = 'bps/vim-textobj-python'
depends = 'vim-textobj-user'
on_ft = ['python', 'python3']

# ============ Web Development Support ============
[[plugins]]
repo = 'mattn/emmet-vim'
on_cmd = 'EmmetInstall'
hook_add = '''
let g:user_emmet_install_global = 0
let g:user_emmet_mode = 'i'
let g:user_emmet_settings = {
    \   'variables': {'lang': 'ja',},
    \ }

augroup emmet_hooks
  autocmd!
  autocmd FileType html,css,xml EmmetInstall
      \ | imap <silent><buffer> <C-e> <Plug>(emmet-expand-abbr)
augroup END
'''
[[plugins]]
repo = 'jasonlong/vim-textobj-css'
depends = 'vim-textobj-user'
on_ft = 'css'
[[plugins]]
repo = 'othree/csscomplete.vim'
on_ft = 'css'
hook_post_source = '''
augroup csscomplete_hooks
  autocmd!
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS noci
augroup END
'''
[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = ['javascript', 'javascript.jsx', 'jsx', 'vue']
[[plugins]]
repo = 'carlitux/deoplete-ternjs'
depends = ['deoplete.nvim', 'tern_for_vim']
on_ft = ['javascript', 'javascript.jsx', 'jsx', 'vue']
hook_add = '''
let g:deoplete#sources#ternjs#tern_bin = '~/.npm-global/bin/tern'
let g:deoplete#sources#ternjs#timeout = 1
let g:deoplete#sources#ternjs#types = 1
let g:deoplete#sources#ternjs#docs = 1
let g:deoplete#sources#ternjs#filetypes = ['javascript', 'javascript.jsx', 'jsx', 'vue']
'''
[[plugins]]
repo = 'mhartington/nvim-typescript'
depends = 'deoplete.nvim'
on_ft = 'typescript'

# ============ SQL Support ============
[[plugins]]
repo = 'vim-scripts/SQLComplete.vim'
depends = 'deoplete.nvim'
on_ft = 'sql'

# ============ Docker Support ============
[[plugins]]
repo = 'zchee/deoplete-docker'
depends = 'deoplete.nvim'
on_ft = 'dockerfile'

# ============ Markdown Support ============
[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'
hook_add = '''
let g:gfm_syntax_enable_always = 0
let g:gfm_syntax_enable_filetypes = ['markdown.gfm']
'''
hook_post_source = '''
autocmd BufRead,BufNew,BufNewFile README.md setlocal ft=markdown.gfm
'''

# ============ VimL Support ============
[[plugins]]
repo = 'shougo/neco-vim'
depends = 'deoplete.nvim'
on_ft = 'vim'

