" .ideavimrc
" author: Seong Yong-ju ( @sei40kr )

let g:mapleader = ';'

set history=1000
set hlsearch ignorecase incsearch smartcase wrapscan
set ignorecase smartcase
set noerrorbells t_vb= visualbell
set noshowmode
set nrformats-=octal
set number relativenumber
set scrolloff=1 sidescrolloff=5
set surround

" Key Bindings
" ------------

" Unimpaired key bindings {{{

" Move line up
nnoremap <silent> [e :move -2<CR>
" Move line down
nnoremap <silent> ]e :move +<CR>

" Insert space above
nnoremap <silent> [<Space> O<Esc>
" Insert space below
nnoremap <silent> ]<Space> o<Esc>

" Paste above current line
nnoremap <silent> [p P
" Paste below current line
nnoremap <silent> ]p p

" TODO Go to previous buffer

" TODO Go to next buffer

" Go to the previous error
nnoremap <silent> [l :action GotoPreviousError<CR>
nnoremap <silent> [q :action GotoPreviousError<CR>
" Go to the next error
nnoremap <silent> ]l :action GotoNextError<CR>
nnoremap <silent> ]q :action GotoNextError<CR>

" Go to the previous vcs hunk
nnoremap <silent> [c :action VcsShowPrevChangeMarker<CR>
" Go to the next vcs hunk
nnoremap <silent> ]c :action VcsShowNextChangeMarker<CR>

" Go to the previous frame
nnoremap <silent> [t gT
" Go to the next frame
nnoremap <silent> ]t gt

" TODO Go to the previous window

" TODO Go to the next window

" }}}


" Jumping, joining and splitting key bindings {{{

" go to the beginning of line (and set a mark at the previous location in the line)
nnoremap <silent> <Space>j0 m`^
" go to the end of line (and set a mark at the previous location in the line)
nnoremap <silent> <Space>j$ m`g_

" go to next line and indent it using auto-indent rules
nnoremap <silent> <Space>jk j==

" split the current line at point, insert a new line and auto-indent
nnoremap <silent> <Space>jn i<CR><Esc>

" split the current line at point but let point on current line
nnoremap <silent> <Space>jo i<CR><Esc>k$

" TODO split a quoted string or s-expression in place

" TODO split a quoted string or s-expression, insert a new line and auto-indent

" jump backward
nnoremap <silent> <Space>jb <C-o>
" jump forward
nnoremap <silent> <Space>jf <C-i>

" jump to a character in the buffer (CharJump)
noremap <silent> <Space>jj :<C-u>action CharJumpAction<CR>

" Go to the previous vcs hunk
nnoremap <silent> <Leader>hk :action VcsShowPrevChangeMarker<CR>
" Go to the next vcs hunk
nnoremap <silent> <Leader>hj :action VcsShowNextChangeMarker<CR>

" jump to a definition in buffer
nnoremap <silent> <Space>ji :action FileStructurePopup<CR>

" jump to a definition in any buffer
nnoremap <silent> <Space>jI :action GotoSymbol<CR>

" }}}


" Window manipulation key bindings {{{

" TODO cycle and focus between tabs

" horizontal split
nnoremap <silent> <Space>ws :action SplitHorizontally<CR>
" horizontal split and focus new window
nnoremap <silent> <Space>wS :split<CR>

" vertical split
nnoremap <silent> <Space>wv :action SplitVertically<CR>
" vertical split and focus new window
nnoremap <silent> <Space>wV :vsplit<CR>

" move to window on the left
nnoremap <silent> <Space>wh <C-w>h
" move to window below
nnoremap <silent> <Space>wj <C-w>j
" move to window above
nnoremap <silent> <Space>wk <C-w>k
" move to window on the right
nnoremap <silent> <Space>wl <C-w>l

" TODO cycle and focus between windows

" TODO switch to alternate window in the current frame (switch back and forth)

" TODO move window to the left
" TODO move window to the bottom
" TODO move window to the top
" TODO move window to the right

" TODO rotate windows forward
" TODO rotate windows backward

" TODO balance split windows

" TODO maximize/minimize a window (maximize is equivalent to delete other windows)

" TODO undo window layout (used to effectively undo a closed window)

" TODO redo window layout

" delete a window
nnoremap <silent> <Space>wd :action Unsplit<CR>

" delete a window and its current buffer (does not delete the file)
nnoremap <silent> <Space>u<Space>wd :action CloseEditor<CR>

" }}}

" Buffers manipulation key bindings

" TODO switch to previous buffer avoiding special buffers
" TODO switch to next buffer avoiding special buffers

" kill other buffers
nnoremap <silent> <Space>b<C-d> :action CloseAllEditorsButActive<CR>
" TODO switch to alternate buffer in the current window (switch back and forth)

" switch to a buffer (via denite/unite)
nnoremap <silent> <Space>bb :action Switcher<CR>

" kill the current buffer (does not delete the visited file)
nnoremap <silent> <Space>bd :quit<CR>

" TODO kill the current buffer and window (does not delete the visited file)

" TODO erase the content of the buffer (ask for confirmation)

" kill all buffers and windows except the current one
nnoremap <silent> <Space>u<Space>bm :action VimWindowOnly<CR>

" copy whole buffer to clipboard (useful when copying to a browser)
nnoremap <silent> <Space>bY ggVG"+y

" copy clipboard and replace buffer (useful when pasting from a browser)
nnoremap <silent> <Space>bP ggdG"+P

" revert the current buffer (reload from disk)
nnoremap <silent> <Space>bR :action ReloadFromDisk<CR>

" toggle read-only (writable state)
nnoremap <silent> <Space>bw :action ToggleReadOnlyAttribute<CR>

" TODO Make current function or comments visible in buffer as much as possible

" File manipulations key bindings {{{

" try to open the file under point
nnoremap <silent> <Space>fF gf

" save a file
nnoremap <silent> <Space>fs :write<CR>
noremap <silent> <Leader>w :<C-u>write<CR>
noremap <silent> <C-s> :<C-u>write<CR>
cnoremap <silent> <C-s> :<C-u>write<CR>

" save all files
nnoremap <silent> <Space>fS :wall<CR>

" show and copy current file absolute path in the cmdline
nnoremap <silent> <Space>fy :action CopyPaths<CR>

" rename the current file
nnoremap <silent> <Space>fR :action RenameFile<CR>

" TODO copy current file to a different location

" TODO delete a file and the associated buffer (ask for confirmation)

" open file
nnoremap <silent> <Space>ff :action GotoFile<CR>

" open a recent file
nnoremap <silent> <Space>fr :action RecentFiles<CR>

" toggle file tree side bar
nnoremap <silent> <Space>ft :action ActivateProjectToolWindow<CR>
" show file tree side bar
nnoremap <silent> <Space>fT :action ActivateProjectToolWindow<CR>

" TODO go to file bookmarks

" }}}


" IdeaVIM specified bindings {{{

" open SpaceVim custom configuration file
nnoremap <silent> <Space>fvd :edit ~/.ideavimrc<CR>

" }}}


" Error handling key bindings {{{

" Go to the previous error
nnoremap <silent> <Space>ep :action GotoPreviousError<CR>
" Go to the next error
nnoremap <silent> <Space>en :action GotoNextError<CR>

" TODO toggle the display of the list of errors/warnings

" }}}


" Project management key bindings {{{

" open a shell in project’s root (with the shell layer)
nnoremap <silent> <Space>' :action ActivateTerminalToolWindow<CR>

" }}}


" Custom key bindings {{{

" Smart up and down
nnoremap <Up> gk
nnoremap <Down> gj

" After paragraph motion go to first non-blank char (}^)
nnoremap } }^

" Indent to left and re-select
nnoremap < <<_
xnoremap < <gv
xnoremap <S-Tab> <gv
" Indent to right and re-select
nnoremap > >>_
xnoremap > >gv|
xnoremap <Tab> >gv|

" Copy selection to X11 clipboard (“+y)
vnoremap <Leader>y "+y

" Copy full path of current buffer to X11 clipboard
nnoremap <C-c> :action CopyPaths<CR>

" Paste selection from X11 clipboard (“+p)
vnoremap <Leader>p "+p

" Ctrl+w
nnoremap <C-q> <C-w>

" Switch buffer and placement
nnoremap <C-x> <C-w>x

" Navigation in command line
cnoremap <C-a> <Home>
" Move cursor backward in command line
cnoremap <C-b> <Left>
" Move cursor forward in command line
cnoremap <C-f> <Right>

" }}}


" Editor UI key bindings

" TODO Remove all spaces at EOL

" Move to split below (j)
nnoremap <silent> <C-j> <C-w>j
nnoremap <silent> <C-Down> <C-w>j
" Move to upper split (k)
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-Up> <C-w>k
" Move to left split (h)
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-Left> <C-w>h
" Move to right split (l)
nnoremap <silent> <C-l> <C-w>l
nnoremap <silent> <C-Right> <C-w>l

" TODO Search selection forwards

" TODO Search selection backwards

" TODO Replace selection

" TODO Next on location list
" TODO Previous on location list
" TODO Source selection

" TODO open tabs manager

" TODO toggle syntax highlighting

" Toggle highlighted search (:set hlsearch!)
nnoremap <silent> <Leader>th :set hlsearch!<CR>

" Toggle spell-checker (:setlocal spell!)
nnoremap <silent> <Leader>ts :setlocal spell!<CR>

" Toggle hidden characters (:setlocal nolist!)
nnoremap <silent> <Leader>tl :setlocal nolist!<CR>

" TODO display ~ in the fringe on empty lines

" Toggle line numbers (:setlocal nonumber!)
nnoremap <silent> <Leader>tn :setlocal nonumber!<CR>

" TODO display the fill column (by default the fill column is set to 80)

" TODO highlight any character past the 80th column

" Toggle highlight indentation levels
nnoremap <silent> <Space>thi :action EditorToggleShowIndentLines<CR>

" TODO toggle menu bar

" TODO toggle tool bar

" select a theme using a unite buffer.
nnoremap <silent> <Space>Ts :action ChangeColorScheme<CR>


" Bookmark key bindings {{{

" Jump to previous bookmark
nnoremap <silent> <M-p> :action GotoPreviousBookmark<CR>
" Jump to next bookmark
nnoremap <silent> <M-n> :action GotoNextBookmark<CR>

" Toggle bookmark in current line
nnoremap <silent> <M-a> :action ToggleBookmark<CR>

" Show list of all bookmarks
nnoremap <silent> <M-a> :action ShowBookmarks<CR>

" }}}


" Language specified key bindings {{{

" override default behaviors
nnoremap <silent> gd :<C-u>action GotoDeclaration<CR>
nnoremap <silent> K :<C-u>action QuickJavaDoc<CR>

" go to implementation
nnoremap <silent> <Space>li :<C-u>action GotoImplementation<CR>

" show intention actions
nnoremap <silent> <F4> :action ShowIntentionActions<CR>
inoremap <silent> <F4> :action ShowIntentionActions<CR>

" generate constructor
nnoremap <silent> <Leader>gc :<C-u>action GenerateConstructor<CR>

" generate equals
nnoremap <silent> <Leader>geq :<C-u>action GenerateEquals<CR>

" generate getter and setter accessor
nnoremap <silent> <Leader>gA :<C-u>action GenerateGetterAndSetter<CR>

" generate getter accessor
nnoremap <silent> <Leader>gg :<C-u>action GenerateGetter<CR>

" generate setter accessor
nnoremap <silent> <Leader>gs :<C-u>action GenerateSetter<CR>

" rename element
nnoremap <silent> <Space>le :action RenameElement<CR>

" debug
nnoremap <silent> <Space>lr :action Run<CR>

" run
nnoremap <silent> <Space>ld :action Debug<CR>

" }}}

nnoremap x "_x
