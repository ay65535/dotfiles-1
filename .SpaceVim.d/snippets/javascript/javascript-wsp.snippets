snippet api
  dispatch(loadingStart());

  return Api.invoke({
    path: '${1:path}',
    param: {
      ${2:param}
    },
  })
      .then((body: ResponseBody) => dispatch(${3:action}Success(body)))
      .catch((err: Error) => dispatch(catchApiError(err, { isContinuable: ${4:true} })))
      .then(() => dispatch(loadingEnd()))${0}
snippet converter
  const convert${1:Entities} = (${2:records}: ${3:RecordType}[]) => ({
    allIds: $2.map((${4:record}: $3) => $4.${5:id}),
    byId: Object.assign({}, ...$2.map(($4: $3) => ({ [$4.$5]: $4 }))),
  });
  ${0}
snippet selector
  export const ${1:entity}Selector = createSelector(
    state => state.${2}.allIds,
    state => state.$2.byId,
    (allIds, byId) => allIds.map(id => byId[id])
  );
  ${0}
