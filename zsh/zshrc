# -*- mode: sh -*-

# zshrc
# author: Seong Yong-ju <sei40kr@gmail.com>

# If not running in tmux or in-editor terminals, attach a tmux session
if [[ -z "$TMUX" && -z "$INSIDE_EMACS" && -z "$EMACS" && -z "$VIM" ]]; then
    tmux attach-session || tmux new-session
    exit
fi

autoload -Uz \
         clone_gh \
         create_gh \
         fzf-remote-widget \
         fzf-project-widget \
         kca \
         kres \
         magit \
         pyclean \
         ranger-cd

. "${ZDOTDIR}/func_defs.zsh"
. "${ZDOTDIR}/func_defs_emacs.zsh"
. "${ZDOTDIR}/alias_defs.zsh"

HISTFILE="${ZDOTDIR}/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000

setopt APPEND_HISTORY
setopt AUTO_CD
setopt AUTO_LIST
setopt AUTO_MENU
setopt AUTO_PUSHD
setopt AUTO_PARAM_KEYS
setopt AUTO_PARAM_SLASH
setopt AUTO_RESUME
setopt EQUALS
setopt EXTENDED_HISTORY
setopt GLOB_DOTS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY
setopt INTERACTIVE_COMMENTS
setopt NO_BEEP
setopt NUMERIC_GLOB_SORT
setopt PRINT_EIGHT_BIT
setopt PROMPT_SUBST
setopt PUSHD_IGNORE_DUPS
setopt SHARE_HISTORY
unsetopt LIST_BEEP

zle -N fzf-remote-widget
zle -N fzf-project-widget

bindkey -e
bindkey '^xr' fzf-remote-widget
bindkey '^x^r' fzf-remote-widget
bindkey '^xg' fzf-project-widget
bindkey '^x^g' fzf-project-widget

. "${HOME}/.zplugin/bin/zplugin.zsh"

# Plugins that provides commands
zplugin light _local/zsh-fzf-docker
zplugin snippet 'OMZ::lib/clipboard.zsh'
zplugin snippet 'OMZ::plugins/extract/extract.plugin.zsh'
zplugin snippet 'OMZ::plugins/zsh_reload/zsh_reload.plugin.zsh'

# Plugins that loads version managers
# Load nvm
export NVM_SYMLINK_CURRENT=true
export NVM_LAZY_LOAD=true
export NVM_AUTO_USE=true
zplugin light lukechilds/zsh-nvm
# Load pyenv
if [[ -n "$GOENV_ROOT" && -d "$GOENV_ROOT" ]]; then
    [[ -f "${GOENV_ROOT}/zgoenv.zsh" ]] ||
        goenv init - --no-rehash zsh >"${GOENV_ROOT}/zgoenv.zsh"
    zplugin snippet "${GOENV_ROOT}/zgoenv.zsh"
fi
# Load pyenv
if [[ -n "$PYENV_ROOT" && -d "$PYENV_ROOT" ]]; then
    [[ -f "${PYENV_ROOT}/zpyenv.zsh" ]] ||
        pyenv init - --no-rehash zsh >"${PYENV_ROOT}/zpyenv.zsh"
    zplugin snippet "${PYENV_ROOT}/zpyenv.zsh"
fi
# Load rbenv
if [[ -n "$RBENV_ROOT" && -d "$RBENV_ROOT" ]]; then
    [[ -f "${RBENV_ROOT}/zrbenv.zsh" ]] ||
        rbenv init - --no-rehash zsh >"${RBENV_ROOT}/zrbenv.zsh"
    zplugin snippet "${RBENV_ROOT}/zrbenv.zsh"
fi
if [[ -n "$SDKMAN_DIR" && -d "$SDKMAN_DIR" ]]; then
    zplugin snippet "${SDKMAN_DIR}/bin/sdkman-init.sh"
fi

# Plugins that contains both aliases and completions
zplugin snippet 'OMZ::plugins/composer/composer.plugin.zsh'
zplugin ice svn
zplugin snippet 'OMZ::plugins/gem'
zplugin snippet 'OMZ::plugins/golang/golang.plugin.zsh'
zplugin snippet 'OMZ::plugins/gradle/gradle.plugin.zsh'
# zplugin snippet 'OMZ::plugins/kubectl/kubectl.plugin.zsh'
zplugin snippet 'OMZ::plugins/laravel/laravel.plugin.zsh'
zplugin snippet 'OMZ::plugins/laravel5/laravel5.plugin.zsh'
zplugin snippet 'OMZ::plugins/mvn/mvn.plugin.zsh'
# zplugin snippet 'OMZ::plugins/npm/npm.plugin.zsh'
zplugin ice svn
zplugin snippet 'OMZ::plugins/rails'
zplugin ice svn
zplugin snippet 'OMZ::plugins/react-native'
zplugin ice svn
zplugin snippet 'OMZ::plugins/sbt'
zplugin ice svn
zplugin snippet 'OMZ::plugins/yarn'

# Plugins that contains aliases only
zplugin snippet 'OMZ::plugins/ansible/ansible.plugin.zsh'
zplugin snippet 'OMZ::plugins/docker-compose/docker-compose.plugin.zsh'
zplugin snippet 'OMZ::plugins/git/git.plugin.zsh'
zplugin snippet 'OMZ::plugins/git-flow/git-flow.plugin.zsh'
zplugin snippet 'OMZ::plugins/nmap/nmap.plugin.zsh'
zplugin snippet 'OMZ::plugins/perl/perl.plugin.zsh'
zplugin snippet 'OMZ::plugins/rsync/rsync.plugin.zsh'

# Plugins that contains completions only
zplugin ice wait''
zplugin light lukechilds/zsh-better-npm-completion
zplugin ice pick'' blockf wait''
zplugin light zsh-users/zsh-completions
zplugin ice wait''
zplugin snippet 'OMZ::plugins/cabal/cabal.plugin.zsh'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/cargo/_cargo'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/codeclimate/_codeclimate'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/cpanm/_cpanm'
# zplugin snippet 'OMZ::plugins/minikube/minikube.plugin.zsh'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/pip/_pip'
zplugin ice wait''
zplugin snippet 'OMZ::plugins/rake-fast/rake-fast.plugin.zsh'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/redis-cli/_redis-cli'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/rust/_rust'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/scala/_scala'
zplugin ice wait''
zplugin snippet 'OMZ::plugins/stack/stack.plugin.zsh'
zplugin ice as'completion' wait''
zplugin snippet 'OMZ::plugins/vagrant/_vagrant'
# Load docker, docker-compose completions
if [[ "$OSTYPE" == darwin* && -d '/Applications/Docker.app' ]]; then
    zplugin ice as'completion' wait'' multisrc'{docker,docker-compose}.zsh-completion'
    zplugin light '/Applications/Docker.app/Contents/Resources/etc'
else
    zplugin ice as'completion' wait''
    zplugin snippet 'OMZ::plugins/docker/_docker'
    zplugin ice as'completion' wait''
    zplugin snippet 'OMZ::plugins/docker-compose/_docker-compose'
fi
# Load gcloud completion
if [[ -n "$__gcloud_sdk" ]]; then
    zplugin ice wait''
    zplugin snippet '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'
fi
# Load perlbrew completion
if [[ -n "$PERLBREW_ROOT" && -d "$PERLBREW_ROOT" ]]; then
    zplugin ice wait''
    zplugin snippet "${PERLBREW_ROOT}/etc/perlbrew-completion.bash"
fi
# Load travis completion
if [[ -f "${HOME}/.travis/travis.sh" ]]; then
    zplugin ice wait''
    zplugin snippet "${HOME}/.travis/travis.sh"
fi

# Utility Plugins
zplugin ice from'gh-r' as'program' mv'direnv* -> direnv' atinit'[[ -f zhook.zsh ]] || ./direnv hook zsh >zhook.zsh' src'zhook.zsh'
zplugin light direnv/direnv
zplugin ice wait'0c' atinit'zpcompinit; zpcdreplay' lucid
zplugin light zdharma/fast-syntax-highlighting
zplugin ice wait'0b' lucid
zplugin light -b zdharma/history-search-multi-word
zplugin ice from'gh-r' as'program'
zplugin light julienXX/terminal-notifier
zplugin ice wait'0b' lucid
zplugin light -b zsh-users/zsh-autosuggestions
zplugin snippet 'OMZ::plugins/bgnotify/bgnotify.plugin.zsh'
zplugin snippet 'OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh'
zplugin snippet 'OMZ::plugins/fancy-ctrl-z/fancy-ctrl-z.plugin.zsh'
# Load fzf
FZF_DEFAULT_OPTS='--height=15 --reverse --inline-info --color=dark --color=fg:-1,bg:-1,hl:#c678dd,fg+:#ffffff,bg+:#4b5263,hl+:#d858fe --color=info:#98c379,prompt:#61afef,pointer:#be5046,marker:#e5c07b,spinner:#61afef,header:#61afef'
zplugin ice from'gh-r' as'program'
zplugin light junegunn/fzf-bin
zplugin ice bindmap'^R ->' multisrc'shell/{completion,key-bindings}.zsh'
zplugin light -b junegunn/fzf
# Load zsh-fast-alias-tips
zplugin ice make
zplugin light _local/zsh-fast-alias-tips
FAST_ALIAS_TIPS_PREFIX='üí° \e[1mTip:\e[0m '
FAST_ALIAS_TIPS_SUFFIX=''
# Load completion
HYPHEN_INSENSITIVE=true
COMPLETION_WAITING_DOTS=true
zplugin snippet 'OMZ::lib/completion.zsh'

# Prompt Theme
SPACESHIP_HOST_SHOW=false
SPACESHIP_RUBY_SYMBOL='üíé '
SPACESHIP_KUBECONTEXT_SYMBOL='‚ò∏Ô∏è '
SPACESHIP_BATTERY_SHOW=false
zplugin ice wait'!0a' lucid
zplugin light denysdovhan/spaceship-prompt
